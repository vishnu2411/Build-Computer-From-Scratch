// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux4Way.hdl
/**
 * 4-way demultiplexor:
 * [a, b, c, d] = [in, 0, 0, 0] if sel = 00
 *                [0, in, 0, 0] if sel = 01
 *                [0, 0, in, 0] if sel = 10
 *                [0, 0, 0, in] if sel = 11
 */
CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    /* We view the problem as two parts, first we channel 'in' according
    to the first entry of 'sel', so that 'in' is in either 'o1' or 'o2'. 
    Then channel each of these according to the last entry of 'sel', this
    treats each of 'a', 'b', 'c' and 'd' separately and achieves the desired
    result. Note that indexing in buses start from the right. */
    DMux(in=in, sel=sel[1], a=o1, b=o2);
    DMux(in=o1, sel=sel[0], a=a, b=b);
    DMux(in=o2, sel=sel[0], a=c, b=d);
    //// Replace this comment with your code.
}